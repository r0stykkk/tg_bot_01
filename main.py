import hashlib
import telebot
import sqlite as s
import os
import uuid
from sqlite import conn, cursor
from telebot import types

bot = telebot.TeleBot("6188033224:AAHuZgBFucFyB79H2UA3SPWfXSaNtK3yyq0")

def key(password, salt):
    keyF = hashlib.sha256((password + salt).encode()).hexdigest()
    return keyF
def logpass(password, salt, keyp):
    if password == key(keyp, salt):
        return True
    else:
        return False
    
@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text == '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è':
        login(message)
    elif message.text == '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è':
        check(message)
    elif message.text == '–î–µ–π—Å—Ç–≤–∏–µ':
        vibor(message)
    elif message.text == '/start':
        send_welcome(message)
    else:
        bot.send_message(message.chat.id, text='–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!')

@bot.message_handler(commands=['choice'])
def vibor(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    btn2 = types.KeyboardButton("–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã")
    btn3 = types.KeyboardButton("–ß—Ç–æ –¥–µ–ª–∞–µ—Ç")
    btn4 = types.KeyboardButton("–í—Ä–µ–º—è –≤ –ø—Ä-—è—Ö")
    markup.add(btn1, btn2, btn3, btn4)
    bot.send_message(message.from_user.id, "–°–º–æ—Ç—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ –∫–Ω–æ–ø–∫–∞—Ö", reply_markup=markup)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
    btn2 = types.KeyboardButton("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
    btn3 = types.KeyboardButton("–í—ã–±–æ—Ä —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞")
    btn4 = types.KeyboardButton("–î–µ–π—Å—Ç–≤–∏–µ")
    markup.add(btn1, btn2, btn3, btn4)
    bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç! üëã", reply_markup=markup)

@bot.message_handler(commands=['reg'])
def check(message):
    user_id = message.from_user.id
    if s.getTrue(user_id=user_id) is False:
        mes = bot.send_message(message.chat.id, text='–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π –ø–∞—Ä–æ–ª—å')
        bot.register_next_step_handler(mes, reg)
    else:
        bot.send_message(message.chat.id, text='–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã ')
        if s.getName(conn=conn, user_id=user_id) is None:
            mes = bot.send_message(message.chat.id, text='–ù–æ –≤—ã –Ω–µ –≤–≤–µ–ª–∏ –ø–∞—Ä–æ–ª—å. \n –í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π –ø–∞—Ä–æ–ª—å')
            bot.register_next_step_handler(mes, pass_set)
def reg(message):
    user_id = message.from_user.id
    username = message.from_user.username
    salt = uuid.uuid4().hex
    password = message.text
    passw = key(password, salt)
    s.db_table_val(user_id=user_id, username=username, passw=passw, salt=salt)
    bot.delete_message(message.chat.id, message.message_id)
    bot.send_message(message.chat.id, text='–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã ')
def pass_set(message):
    user_id = message.from_user.id
    username = message.from_user.username
    salt = uuid.uuid4().hex
    password = message.text
    passw = key(password, salt)
    s.db_table_ed(passw=passw, user_id=user_id)
    s.db_table_ed2(salt=salt, user_id=user_id)
    bot.delete_message(message.chat.id, message.message_id)
    bot.send_message(message.chat.id, text='–í—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –ø–∞—Ä–æ–ª—å')


@bot.message_handler(commands=['login'])
def login(message):
    user_id = message.from_user.id
    username = message.from_user.username
    mes = bot.send_message(message.chat.id, text='–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞')
    bot.register_next_step_handler(mes, get_password)
def get_password(message):
    user_id = message.from_user.id
    username = message.from_user.username
    passw = s.getName(conn=conn, user_id=user_id)
    salt = s.getSalt(conn=conn, user_id=user_id)
    result = logpass(passw, salt, message.text)
    if result is True:
        bot.delete_message(message.chat.id, message.message_id)
        bot.send_message(message.chat.id, "–ü–∞—Ä–æ–ª—å –≤–µ—Ä–Ω—ã–π!")
    else:
        mes = bot.send_message(message.chat.id, text='–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        bot.register_next_step_handler(mes, get_password)


bot.infinity_polling()